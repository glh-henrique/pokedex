{"version":3,"file":"static/js/247.0cb9ef49.chunk.js","mappings":"kNAIe,SAASA,IACtB,IAAAC,GAA6CC,EAAAA,EAAAA,MAArCC,EAAQF,EAARE,SAAUC,EAAYH,EAAZG,aAAcC,EAAQJ,EAARI,SAE1BC,EAAgB,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAG,SAAAC,EAAOC,GAAY,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAC1CX,EAASO,GAAM,wBAAAE,EAAAG,OAAA,GAAAN,EAAA,KAChB,gBAFqBO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,KAItB,OACIC,EAAAA,EAAAA,KAACC,EAAAA,EAAY,CACXnB,SAAUA,EACVC,aAAcA,EACdE,iBAAkBA,GAG1B,C,8MCTe,SAASiB,EAAWhB,GAM/B,IALFiB,EAAEjB,EAAFiB,GACAC,EAAIlB,EAAJkB,KAKMC,GAAWC,EAAAA,EAAAA,MACjBC,GAAuCC,EAAAA,EAAAA,MAA/BC,EAAcF,EAAdE,eAAgBC,EAAUH,EAAVG,WAClBC,EAAM,GAAAC,OAAMC,EAAAA,GAAAA,MAAeD,OAAGR,GAEpC,OACEU,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,GAAI,CACFC,SAAU,CAAEC,GAAI,OAAQC,GAAI,WAC5BC,OAAQ,UACRC,gBAAiB,4BAEnBC,QAAS,SAACC,GACRA,EAAEC,kBACFD,EAAEE,iBAEFpB,EAASM,EACX,EAAEe,SAAA,EAEF1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAU,CACTC,QACE5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAU,CACTP,QAAS,SAACC,GACRA,EAAEC,kBACFD,EAAEE,iBAEFhB,EAAe,CAAEN,GAAAA,EAAIC,KAAAA,GACvB,EACA,aAAW,WAAUsB,SAEpBhB,EAAWP,IACVH,EAAAA,EAAAA,KAAC8B,EAAAA,EAAQ,CAACd,GAAI,CAAEe,MAAO,aAEvB/B,EAAAA,EAAAA,KAACgC,EAAAA,EAAe,CAACD,MAAM,WAI7BE,MAAO7B,EACP8B,UAAS,GAAAtB,QAAKuB,EAAAA,EAAAA,GAAehC,OAE/BH,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,CACRpB,GAAI,CAAEqB,MAAO,OAAQC,OAAQ,OAAQC,OAAQ,QAC7CC,UAAU,MACVC,IAAG,YAAA7B,OAAcR,GACjBsC,MAAK,GAAA9B,OAAK+B,EAAAA,GAAa,KAAA/B,OAAIT,EAAE,YAIrC,CCzDe,SAASF,EAAYf,GAQhC,IAPFJ,EAAQI,EAARJ,SACAC,EAAYG,EAAZH,aACAE,EAAgBC,EAAhBD,iBAOA,OACEe,EAAAA,EAAAA,KAAA4C,EAAAA,SAAA,CAAAlB,UACEZ,EAAAA,EAAAA,MAAC+B,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,SAAS/B,GAAI,CAAEgC,aAAc,QAAStB,SAAA,EACnE1B,EAAAA,EAAAA,KAAC6C,EAAAA,GAAI,CAACC,WAAS,EAACC,eAAe,SAASE,IAAK,OAAOvB,SACjD5C,EAASoE,KAAI,SAACC,GAAO,OACpBnD,EAAAA,EAAAA,KAACE,GAAWkD,EAAAA,EAAAA,GAAA,GAAsBD,GAAhBA,EAAQhD,GAAmB,MAGhDpB,EAAesE,EAAAA,KACdrD,EAAAA,EAAAA,KAACsD,EAAAA,EAAU,CACTC,SAAU,SAAChC,EAAGhC,GAAI,OAAKN,GAAqBA,EAAiBM,EAAK,EAClEiE,MAAOC,KAAKC,MAAM3E,EAAesE,EAAAA,IACjCM,QAAQ,WACR5B,MAAM,UACNf,GAAI,CAAE4C,UAAW,cAM7B,C","sources":["components/Home/index.tsx","components/PokemonCard/index.tsx","components/ListPokemons/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { usePokedex } from \"../../hooks/usePokedex\";\r\nimport ListPokemons from \"../ListPokemons\";\r\n\r\nexport default function Home() {\r\n  const { pokemons, totalResults, loadMore } = usePokedex();\r\n\r\n  const handlePageChange = async (page: number) => {\r\n    loadMore(page);\r\n  };\r\n\r\n  return (\r\n      <ListPokemons\r\n        pokemons={pokemons}\r\n        totalResults={totalResults}\r\n        handlePageChange={handlePageChange}\r\n      />\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport StarOutlineIcon from \"@mui/icons-material/StarOutline\";\r\nimport StarIcon from \"@mui/icons-material/Star\";\r\nimport { Card, CardHeader, CardMedia, IconButton } from \"@mui/material\";\r\nimport { APP_ROUTES, AVATAR_PREFIX } from \"../../constants\";\r\nimport { generateHashId } from \"../../utils\";\r\nimport { useFavorites } from \"../../hooks/useFavorites\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function PokemonCard({\r\n  id,\r\n  name,\r\n}: {\r\n  id: number;\r\n  name: string;\r\n}) {\r\n  const navigate = useNavigate();\r\n  const { toggleFavorite, isFavorite } = useFavorites();\r\n  const target = `${APP_ROUTES.BASE}${name}`;\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        minWidth: { xs: \"100%\", sm: \"12.5rem\" },\r\n        cursor: \"pointer\",\r\n        backgroundColor: \"rgba(255, 255, 255, 0.1)\",\r\n      }}\r\n      onClick={(e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        navigate(target)\r\n      }}\r\n    >\r\n      <CardHeader\r\n        action={\r\n          <IconButton\r\n            onClick={(e) => {\r\n              e.stopPropagation();\r\n              e.preventDefault();\r\n\r\n              toggleFavorite({ id, name });\r\n            }}\r\n            aria-label=\"favorite\"\r\n          >\r\n            {isFavorite(id) ? (\r\n              <StarIcon sx={{ color: \"yellow\" }} />\r\n            ) : (\r\n              <StarOutlineIcon color=\"info\" />\r\n            )}\r\n          </IconButton>\r\n        }\r\n        title={name}\r\n        subheader={`${generateHashId(id)}`}\r\n      />\r\n      <CardMedia\r\n        sx={{ width: \"7rem\", height: \"7rem\", margin: \"auto\" }}\r\n        component=\"img\"\r\n        alt={`image of ${name}`}\r\n        image={`${AVATAR_PREFIX}/${id}.png`}\r\n      />\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Pagination } from \"@mui/material\";\r\nimport PokemonCard from \"../PokemonCard\";\r\nimport { PAGE_SIZE } from \"../../constants\";\r\nimport { IPokemon } from \"../../interfaces\";\r\n\r\nexport default function ListPokemons({\r\n  pokemons,\r\n  totalResults,\r\n  handlePageChange,\r\n}: {\r\n  pokemons: IPokemon[];\r\n  totalResults: number;\r\n  handlePageChange?: (page: number) => void;\r\n}) {\r\n  \r\n  return (\r\n    <>\r\n      <Grid container justifyContent=\"center\" sx={{ marginBottom: \"6rem\" }}>\r\n        <Grid container justifyContent=\"center\" gap={\"1rem\"}>\r\n          {pokemons.map((pokemon) => (\r\n            <PokemonCard key={pokemon.id} {...pokemon} />\r\n          ))}\r\n        </Grid>\r\n        {totalResults > PAGE_SIZE && (\r\n          <Pagination\r\n            onChange={(e, page) => handlePageChange &&  handlePageChange(page)}\r\n            count={Math.round(totalResults / PAGE_SIZE)}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            sx={{ marginTop: \"2rem\" }}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Home","_usePokedex","usePokedex","pokemons","totalResults","loadMore","handlePageChange","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","wrap","_context","prev","next","stop","_x","apply","arguments","_jsx","ListPokemons","PokemonCard","id","name","navigate","useNavigate","_useFavorites","useFavorites","toggleFavorite","isFavorite","target","concat","APP_ROUTES","_jsxs","Card","sx","minWidth","xs","sm","cursor","backgroundColor","onClick","e","stopPropagation","preventDefault","children","CardHeader","action","IconButton","StarIcon","color","StarOutlineIcon","title","subheader","generateHashId","CardMedia","width","height","margin","component","alt","image","AVATAR_PREFIX","_Fragment","Grid","container","justifyContent","marginBottom","gap","map","pokemon","_objectSpread","PAGE_SIZE","Pagination","onChange","count","Math","round","variant","marginTop"],"sourceRoot":""}